import nu.studer.gradle.jooq.JooqEdition

plugins {
    id 'application'
    id 'nu.studer.jooq' version '8.0'
    id "com.github.roroche.plantuml" version "1.0.2"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "com.github.gmazzo.sqlite" version "0.2"
}

group 'net.pistonmaster'
version '1.0.0'

ext {
    slf4jVersion = '2.0.4'
    log4jVersion = '2.19.0'
}

run {
    mainClass.set('net.pistonmaster.encryptedchat.EncryptedChat')
    standardInput = System.in
}

mainClassName = 'net.pistonmaster.encryptedchat.EncryptedChat'

repositories {
    mavenCentral()
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
}

tasks.register('createServerDatabase') {
    def databaseFile = file("server.sqlite")

    outputs.file databaseFile

    doLast {
        def db = openSQLiteDatabase(databaseFile)
        def statementFile = file("server-structure.sql")
        statementFile.text.split(";").each { statement ->
            def sqlStatement = statement.trim() + ";"
            if (sqlStatement != ";") {
                db.execute sqlStatement
            }
        }
    }
}

dependencies {
    // https://mvnrepository.com/artifact/io.netty/netty-all
    implementation 'io.netty:netty-all:4.1.86.Final'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'com.mojang:brigadier:1.0.18'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    jooqGenerator 'org.xerial:sqlite-jdbc:3.40.0.0'
    implementation 'org.xerial:sqlite-jdbc:3.40.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

test {
    useJUnitPlatform()
}

classDiagram {
    packageName = "net.pistonmaster.encryptedchat"
    outputFile = project.file('diagrams/class_diagram.plantuml')
    // outputFile = new File("${projectDir}/diagrams/class_diagram.plantuml")
    ignoredClasses = []
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

shadowJar {
}

jar {
    manifest {
        attributes(
                'Main-Class': 'net.pistonmaster.encryptedchat.EncryptedChat'
        )
    }
}

jooq {
    version = '3.17.5'
    edition = JooqEdition.OSS
    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.sqlite.JDBC'
                    url = 'jdbc:sqlite:server.sqlite'
                    user = ''
                    password = ''
                    properties {
                        property {
                            key = 'PAGE_SIZE'
                            value = 2048
                        }
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.sqlite.SQLiteDatabase'
                    }
                    generate {
                        deprecated = false
                        records = false
                        immutablePojos = false
                        fluentSetters = false
                    }
                    target {
                        packageName = 'net.pistonmaster.encryptedchat.jooq'
                        directory = 'src/generated/jooq'
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}
